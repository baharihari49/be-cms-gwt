name: Deployment of CMS BE for GWT

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🚚 Get latest code
        uses: actions/checkout@v4

      - name: 🛠️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm install --legacy-peer-deps

      - name: 🔧 Create Environment File from Secrets
        run: |
          cat > .env << EOF
          DATABASE_URL="${{ secrets.DATABASE_URL_PROD }}"
          NODE_ENV=production
          PORT=3012
          JWT_SECRET="${{ secrets.JWT_SECRET_PROD }}"
          EOF
          echo "✅ Environment file created from secrets"

      - name: 🔨 Build Prisma Schema
        run: npm run schema:build

      - name: 🔄 Prisma Generate
        run: npx prisma generate --schema=prisma/schema-combined.prisma

      - name: ✅ Validate Schema
        run: npm run schema:validate || echo "Schema validation completed"

      - name: 🏗️ Build Project (Transpile TS to JS)
        run: npm run build

      - name: 📋 List Build Output
        run: |
          echo "Build completed. Contents:"
          ls -la dist/
          echo "Schema files:"
          ls -la prisma/

      - name: 🚀 Deploy Application Files
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Deploying application files..."
          sshpass -p '${{ secrets.SERVER_PASSWORD }}' rsync -avz --delete \
            --exclude=node_modules \
            --exclude=.git \
            --exclude=.env \
            --exclude=.env.* \
            --exclude=*.log \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./dist/ root@${{ secrets.SERVER_HOST }}:/var/www/be-cms-gwt/dist/

      - name: 🗄️ Deploy Configuration Files
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Deploying configuration files..."
          # Deploy schema
          sshpass -p '${{ secrets.SERVER_PASSWORD }}' rsync -avz \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./prisma/schema-combined.prisma root@${{ secrets.SERVER_HOST }}:/var/www/be-cms-gwt/prisma/schema.prisma
          
          # Deploy package.json
          sshpass -p '${{ secrets.SERVER_PASSWORD }}' rsync -avz \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./package.json root@${{ secrets.SERVER_HOST }}:/var/www/be-cms-gwt/

      - name: 🔐 Create Secure Environment File on Server
        if: github.ref == 'refs/heads/main'
        run: |
          sshpass -p '${{ secrets.SERVER_PASSWORD }}' ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_HOST }} '
            cd /var/www/be-cms-gwt &&
            cat > .env << "EOF"
            DATABASE_URL="${{ secrets.DATABASE_URL_PROD }}"
            NODE_ENV=production
            PORT=3012
            JWT_SECRET="${{ secrets.JWT_SECRET_PROD }}"
            EOF
            chmod 600 .env &&
            chown www-data:www-data .env &&
            echo "✅ Secure environment file created on server"
          '

      - name: 🔧 Install Dependencies on Server
        if: github.ref == 'refs/heads/main'
        run: |
          sshpass -p '${{ secrets.SERVER_PASSWORD }}' ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_HOST }} '
            cd /var/www/be-cms-gwt &&
            echo "Installing dependencies..." &&
            npm install --production --legacy-peer-deps &&
            echo "Generating Prisma client..." &&
            npx prisma generate
          '

      - name: 🗃️ Run Database Migration
        if: github.ref == 'refs/heads/main'
        run: |
          sshpass -p '${{ secrets.SERVER_PASSWORD }}' ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_HOST }} '
            cd /var/www/be-cms-gwt &&
            echo "Running database migration..." &&
            npx prisma migrate deploy || echo "Migration skipped - using db push" &&
            npx prisma db push --accept-data-loss
          '

      - name: 🔒 Set Permissions
        if: github.ref == 'refs/heads/main'
        run: |
          sshpass -p '${{ secrets.SERVER_PASSWORD }}' ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_HOST }} '
            chmod -R 755 /var/www/be-cms-gwt &&
            chown -R www-data:www-data /var/www/be-cms-gwt &&
            chmod 600 /var/www/be-cms-gwt/.env &&
            chmod +x /var/www/be-cms-gwt/dist/server.js &&
            mkdir -p /var/log/be-cms-gwt &&
            mkdir -p /var/www/be-cms-gwt/uploads &&
            chown www-data:www-data /var/log/be-cms-gwt &&
            chown www-data:www-data /var/www/be-cms-gwt/uploads
          '

      - name: 🔁 Restart PM2 Process
        if: github.ref == 'refs/heads/main'
        run: |
          sshpass -p '${{ secrets.SERVER_PASSWORD }}' ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_HOST }} '
            cd /var/www/be-cms-gwt &&
            echo "Restarting PM2 process..." &&
            pm2 restart be-cms-gwt || pm2 start ecosystem.config.js --env production &&
            pm2 save &&
            echo "✅ Deployment completed successfully!"
          '